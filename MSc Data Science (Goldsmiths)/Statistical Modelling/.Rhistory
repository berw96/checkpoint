# scan the dataset for copies based on year and model.
# Copies skew statistical significance.
# Search through all observations in dataset.
for(i in 1:length(data$name)){
# Starting from the current observatyion 'i'
# scan through all remaining observations 'j'.
for(j in i:length(data$name)){
if(
data$name[i] == data$name[j] &&
data$year[i] == data$year[j] &&
i != j
){
print("Copy found")
print(data$name[i])
print(data$name[j])
print(data$year[i])
print(data$year[j])
# If a copy of 'i' is found, push it to a list
cops = append(copies, data[j,])
}
}
}
return(cops)
}
copies = scan_for_copies(copies)
copies
View(copies)
scan_for_copies <- function(cops){
# Create a list to store duplicate car models.
# scan the dataset for copies based on year and model.
# Copies skew statistical significance.
# Search through all observations in dataset.
for(i in 1:length(data$name)){
# Starting from the current observation 'i'
# scan through all remaining observations 'j'.
for(j in i:length(data$name)){
if(
data$name[i] == data$name[j] &&
data$year[i] == data$year[j] &&
i != j
){
print("Copy found")
print(data$name[i])
print(data$name[j])
print(data$year[i])
print(data$year[j])
# If a copy of 'i' is found, push it to a list
cops = append(copies, data[,j])
}
}
}
return(cops)
}
copies = scan_for_copies(copies)
scan_for_copies <- function(cops){
# Create a list to store duplicate car models.
# scan the dataset for copies based on year and model.
# Copies skew statistical significance.
# Search through all observations in dataset.
for(i in 1:length(data$name)){
# Starting from the current observation 'i'
# scan through all remaining observations 'j'.
for(j in i:length(data$name)){
if(
data$name[i] == data$name[j] &&
data$year[i] == data$year[j] &&
i != j
){
print("Copy found")
print(data$name[i])
print(data$name[j])
print(data$year[i])
print(data$year[j])
# If a copy of 'i' is found, push it to a list
cops = append(copies, data[j])
}
}
}
return(cops)
}
copies = scan_for_copies(copies)
scan_for_copies <- function(cops){
# Create a list to store duplicate car models.
# scan the dataset for copies based on year and model.
# Copies skew statistical significance.
# Search through all observations in dataset.
for(i in 1:length(data$name)){
# Starting from the current observation 'i'
# scan through all remaining observations 'j'.
for(j in i:length(data$name)){
if(
data$name[i] == data$name[j] &&
data$year[i] == data$year[j] &&
i != j
){
print("Copy found")
print(data$name[i])
print(data$name[j])
print(data$year[i])
print(data$year[j])
# If a copy of 'i' is found, push it to a list
cops = append(copies, data[[i]])
}
}
}
return(cops)
}
copies = scan_for_copies(copies)
scan_for_copies <- function(cops){
# Create a list to store duplicate car models.
# scan the dataset for copies based on year and model.
# Copies skew statistical significance.
# Search through all observations in dataset.
for(i in 1:length(data$name)){
# Starting from the current observation 'i'
# scan through all remaining observations 'j'.
for(j in i:length(data$name)){
if(
data$name[i] == data$name[j] &&
data$year[i] == data$year[j] &&
i != j
){
print("Copy found")
print(data$name[i])
print(data$name[j])
print(data$year[i])
print(data$year[j])
# If a copy of 'i' is found, push it to a list
cops = append(copies, data[,i])
}
}
}
return(cops)
}
copies = scan_for_copies(copies)
remove(copies)
scan_for_copies <- function(cops){
# Create a list to store duplicate car models.
# scan the dataset for copies based on year and model.
# Copies skew statistical significance.
# Search through all observations in dataset.
for(i in 1:length(data$name)){
# Starting from the current observation 'i'
# scan through all remaining observations 'j'.
for(j in i:length(data$name)){
if(
data$name[i] == data$name[j] &&
data$year[i] == data$year[j] &&
i != j
){
print("Copy found")
print(data$name[i])
print(data$name[j])
print(data$year[i])
print(data$year[j])
# If a copy of 'i' is found, push it to a list
cops = append(copies, data[i,])
}
}
}
return(cops)
}
copies = scan_for_copies(copies)
scan_for_copies <- function(cops){
# Create a list to store duplicate car models.
# scan the dataset for copies based on year and model.
# Copies skew statistical significance.
# Search through all observations in dataset.
for(i in 1:length(data$name)){
# Starting from the current observation 'i'
# scan through all remaining observations 'j'.
for(j in i:length(data$name)){
if(
data$name[i] == data$name[j] &&
data$year[i] == data$year[j] &&
i != j
){
print("Copy found")
print(data$name[i])
print(data$name[j])
print(data$year[i])
print(data$year[j])
# If a copy of 'i' is found, push it to a list
cops = append(cops, data[i,])
}
}
}
return(cops)
}
copies = scan_for_copies(copies)
copies
copies = list()
copies = scan_for_copies(copies)
copies
View(copies)
scan_for_copies <- function(cops){
# Create a list to store duplicate car models.
# scan the dataset for copies based on year and model.
# Copies skew statistical significance.
# Search through all observations in dataset.
for(i in 1:length(data$name)){
# Starting from the current observation 'i'
# scan through all remaining observations 'j'.
for(j in i:length(data$name)){
if(
data$name[i] == data$name[j] &&
data$year[i] == data$year[j] &&
i != j
){
print("Copy found")
print(data$name[i])
print(data$name[j])
print(data$year[i])
print(data$year[j])
# If a copy of 'i' is found, push both to a list
cops = append(cops, list(data[i,], data[j,]))
}
}
}
return(cops)
}
copies = list()
copies = scan_for_copies(copies)
View(copies)
copies[1]
copies[3]
View(copies)
View(copies[[1]])
copies_as_means <- function(cops){
for(i in 1:length(cops)){
print(cops[i])
}
}
copies_as_means(copies)
partition_copies_by_class <- function(cops){
for(i in 1:length(cops)){
for(j in i:length(cops)){
}
}
}
remove(copies_as_means())
View(copies_as_means)
View(copies_as_means)
remove(copies_as_means(copies))
remove(copies_as_means(copies_as_means)
fff
View(copies_as_means)
partition_copies_by_class <- function(cops){
for(i in 1:length(cops)){
for(j in i:length(cops)){
}
}
}
data = read.csv("datasets/Auto.csv")
copies = list()
scan_for_copies <- function(cops){
# scan the dataset for copies based on year and model.
# Categorical copies skew statistical significance.
# Search through all observations in dataset.
for(i in 1:length(data$name)){
# Starting from the current observation 'i'
# scan through all remaining observations 'j'.
for(j in i:length(data$name)){
if(
data$name[i] == data$name[j] &&
data$year[i] == data$year[j] &&
i != j
){
print("Copy found")
# If a copy of 'i' is found, push both to a list
cops = append(cops, list(data[i,], data[j,]))
}
}
}
# Return a list of duplicates as a result.
return(cops)
}
classes = 0
classes += 1
partition_copies_by_class <- function(cops){
classes = 0
for(i in 1:length(cops)){
for(j in i:length(cops)){
if(
cops[i]$name != cops[j]$name &&
cops[i]$year != cops[j]$year &&
i != j
){
classes = classes + 1
}
}
}
}
copies = scan_for_copies(copies)
partition_copies_by_class(copies)
View(copies)
partition_copies_by_class <- function(cops){
classes = 0
for(i in 1:length(cops)){
for(j in i:length(cops)){
if(
i != j
){
classes = classes + 1
}
}
}
}
partition_copies_by_class(copies)
classes = 0
partition_copies_by_class(copies)
partition_copies_by_class <- function(cops){
for(i in 1:length(cops)){
for(j in i:length(cops)){
if(
i != j
){
classes = classes + 1
}
}
}
}
partition_copies_by_class <- function(cops){
for(i in 1:length(cops)){
for(j in i:length(cops)){
if(
i != j
){
classes = classes + 1
}
}
}
print(classes)
}
partition_copies_by_class(copies)
partition_copies_by_class <- function(cops){
for(i in 1:length(cops)){
for(j in i:length(cops)){
if(
cops[i]$name != cops[j]$name &&
i != j
){
classes = classes + 1
}
}
}
print(classes)
}
partition_copies_by_class(copies)
scan_for_copies <- function(cops){
# scan the dataset for copies based on year and model.
# Categorical copies skew statistical significance.
# Search through all observations in dataset.
for(i in 1:length(data$name)){
# Starting from the current observation 'i'
# scan through all remaining observations 'j'.
for(j in i:length(data$name)){
if(
data$name[i] == data$name[j] &&
data$year[i] == data$year[j] &&
i != j
){
print("Copy found")
# If a copy of 'i' is found, push both to a list
cops = append(cops, list(data[i,], data[j,]))
}
}
}
# Return a list of duplicates as a result.
return(cops)
}
data = read.csv("datasets/Auto.csv")
copies = list()
copies = scan_for_copies(copies)
attach(copies)
copies = data.frame()
copies = scan_for_copies(copies)
copies = data.frame()
copies = scan_for_copies(copies)
View(copies)
View(data)
View(copies)
library(caTools)
copies = data.frame()
copies = scan_for_copies(copies)
scan_for_copies <- function(cops){
# scan the dataset for copies based on year and model.
# Categorical copies skew statistical significance.
# Search through all observations in dataset.
for(i in 1:length(data$name)){
# Starting from the current observation 'i'
# scan through all remaining observations 'j'.
for(j in i:length(data$name)){
if(
data$name[i] == data$name[j] &&
data$year[i] == data$year[j] &&
i != j
){
print("Copy found")
# If a copy of 'i' is found, push both to a list
#cops = append(cops, data[i,], data[j,])
cops = rbind(cops, data[i,], data[j,])
}
}
}
# Return a list of duplicates as a result.
return(cops)
}
copies = data.frame()
copies = scan_for_copies(copies)
View(copies)
mean = 0
remove(mean)
obs = data.frame()
for(i in 1:length(copies)){
for(j in i:length(copies)){
obs = data.frame()
if(
copies$name[i] == copies$name[j] &&
copies$year[i] == copies$year[j] &&
i != j
){
obs = rbind(obs, copies[i,], copies[j,])
}
print(obs)
}
}
for(i in 1:length(copies$names)){
for(j in i:length(copies$names)){
obs = data.frame()
if(
copies$name[i] == copies$name[j] &&
copies$year[i] == copies$year[j] &&
i != j
){
obs = rbind(obs, copies[i,], copies[j,])
}
print(obs)
}
}
for(i in 1:length(copies$name)){
for(j in i:length(copies$name)){
obs = data.frame()
if(
copies$name[i] == copies$name[j] &&
copies$year[i] == copies$year[j] &&
i != j
){
obs = rbind(obs, copies[i,], copies[j,])
}
print(obs)
}
}
obs = data.frame()
for(i in 1:length(copies$name)){
for(j in i:length(copies$name)){
if(
copies$name[i] == copies$name[j] &&
copies$year[i] == copies$year[j] &&
i != j
){
obs = rbind(obs, copies[i,], copies[j,])
}
print(obs)
}
}
remove(obs)
obs = data.frame()
for(i in 1:length(copies$name)){
for(j in i:length(copies$name)){
obs = data.frame()
if(
copies$name[i] == copies$name[j] &&
copies$year[i] == copies$year[j] &&
i != j
){
obs = rbind(obs, copies[i,], copies[j,])
}
print(mean(obs$mpg))
}
}
remove(obs)
numeric_data = data[,-9]
# Convert numeric data represented in non-numeric form.
# Engine 'displacement' is represented as 'chr' strings.
numeric_data[,4] = as.integer(numeric_data[,4])
# Calculate mean of horsepower excluding NA values.
mean_hp = mean(numeric_data[,4], na.rm = TRUE)
# Interpret non-data as mean of data in column.
for(i in 1:length(numeric_data[,4])){
if(is.na(numeric_data[i,4])){
numeric_data[i,4] = mean_hp
}
}
american_data = subset(numeric_data, numeric_data$origin == 1)
american_data
american_data = american_data[,-8]
european_data = subset(numeric_data, numeric_data$origin == 2)
european_data = european_data[,-8]
japanese_data = subset(numeric_data, numeric_data$origin == 3)
japanese_data = japanese_data[,-8]
eight_stroke_data = subset(numeric_data, numeric_data$cylinders == 8)
eight_stroke_data = eight_stroke_data[,-2]
# Observing only 6-cylinder cars
six_stroke_data = subset(numeric_data, numeric_data$cylinders == 6)
six_stroke_data = six_stroke_data[,-2]
# Observing only 4-cylinder cars
four_stroke_data = subset(numeric_data, numeric_data$cylinders == 4)
four_stroke_data = four_stroke_data[,-2]
pairs(numeric_data)
cor(numeric_data)
pairs(numeric_data)
